; -!- emf -!-
;
; Created:     2011-05-03
; Modified:    2011-05-12
; Synopsis:    Go mode hook
; Authors:     Jeremy Cowgar
;
; http://www.jasspa.com - MicroEmacs
; http://www.golang.org - Go
; http://jeremy.cowgar.com - Jeremy's Blog
;

define-macro fhook-go
    set-variable $buffer-mask "luh1"
    @# buffer-init "go"
    buffer-init-hooks
    
    ; Go standard is indent with tabs
    -1 buffer-mode "tab"
!emacro

; buffer-init variables
set-variable .fhook-go.setup &reg "/history/fhook/go" "bdfghnopxlqv"
set-variable .fhook-go.setup-mask "abdefghikmnoptuxclqrvy"
set-variable .fhook-go.comment    "|/*| */|*| * | * |f|"
set-variable .fhook-go.comment-1  "|//||//|// | //|r|"
set-variable .fhook-go.indent-width 4

; Setup collapse
set-variable .fhook-go.collapse-open "^\\(func\\|type\\)"
set-variable .fhook-go.collapse-close "^}"

; Setup item-list
set-variable .fhook-go.item-list-s1 "^\\s*\\(func\\|type\\)\\s+\\(.+\\)\\s+{"
set-variable .fhook-go.item-list-r1 "\\1 \ecB\\2\ecA"

; Setup Commands
set-variable .fhook-go.command-flag "|t|th|th|"
set-variable .fhook-go.command-name "||gofmt|gomake|"
set-variable .fhook-go.command-nbind "||||"
set-variable .fhook-go.command-kbind "||||"
set-variable .fhook-go.command-desc  "||Go \HFormat|Go \HMake|"

!if &not &exist .hilight.go
    set-variable .hilight.go &pinc .hilight.next 1
!endif

!if &and &sin "h" .fhook-go.setup &band .hilight.flags 0x02
    0 hilight .hilight.go 2 50 $global-scheme
    
    hilight .hilight.go  2 "//"                    .scheme.comment
    hilight .hilight.go 20 "/\\*" "*/" ""          .scheme.comment
    hilight .hilight.go  4 "\"" "\"" "\\"          .scheme.string
    hilight .hilight.go  4 "'" "'" "\\"            .scheme.string
    hilight .hilight.go  4 "`" "`" ""              .scheme.string
    
    hilight .hilight.go  20 "/\\*\\s*TODO" "*/" "" .scheme.error
    hilight .hilight.go  18 "//\\s*TODO"           .scheme.error
    
    hilight .hilight.go  1 "break"                 .scheme.keyword
    hilight .hilight.go  1 "case"                  .scheme.keyword
    hilight .hilight.go  1 "const"                 .scheme.keyword
    hilight .hilight.go  1 "continue"              .scheme.keyword
    hilight .hilight.go  1 "default"               .scheme.keyword
    hilight .hilight.go  1 "defer"                 .scheme.keyword
    hilight .hilight.go  1 "else"                  .scheme.keyword
    hilight .hilight.go  1 "fallthrough"           .scheme.keyword
    hilight .hilight.go  1 "false"                 .scheme.keyword
    hilight .hilight.go  1 "for"                   .scheme.keyword
    hilight .hilight.go  1 "func"                  .scheme.keyword
    hilight .hilight.go  1 "go"                    .scheme.keyword
    hilight .hilight.go  1 "goto"                  .scheme.keyword
    hilight .hilight.go  1 "if"                    .scheme.keyword
    hilight .hilight.go  1 "import"                .scheme.keyword
    hilight .hilight.go  1 "interface"             .scheme.keyword
    hilight .hilight.go  1 "iota"                  .scheme.keyword
    hilight .hilight.go  1 "nil"                   .scheme.keyword
    hilight .hilight.go  1 "package"               .scheme.keyword
    hilight .hilight.go  1 "range"                 .scheme.keyword
    hilight .hilight.go  1 "return"                .scheme.keyword
    hilight .hilight.go  1 "select"                .scheme.keyword
    hilight .hilight.go  1 "struct"                .scheme.keyword
    hilight .hilight.go  1 "switch"                .scheme.keyword
    hilight .hilight.go  1 "true"                  .scheme.keyword
    hilight .hilight.go  1 "type"                  .scheme.keyword
    hilight .hilight.go  1 "var"                   .scheme.keyword
    
    hilight .hilight.go  1 "bool"                  .scheme.type
    hilight .hilight.go  1 "byte"                  .scheme.type
    hilight .hilight.go  1 "chan"                  .scheme.type
    hilight .hilight.go  1 "complex64"             .scheme.type
    hilight .hilight.go  1 "complex128"            .scheme.type
    hilight .hilight.go  1 "float32"               .scheme.type
    hilight .hilight.go  1 "float64"               .scheme.type
    hilight .hilight.go  1 "int"                   .scheme.type
    hilight .hilight.go  1 "int8"                  .scheme.type
    hilight .hilight.go  1 "int16"                 .scheme.type
    hilight .hilight.go  1 "int32"                 .scheme.type
    hilight .hilight.go  1 "int64"                 .scheme.type
    hilight .hilight.go  1 "map"                   .scheme.type
    hilight .hilight.go  1 "string"                .scheme.type
    hilight .hilight.go  1 "uint"                  .scheme.type
    hilight .hilight.go  1 "uintptr"               .scheme.type
    hilight .hilight.go  1 "uint8"                 .scheme.type
    hilight .hilight.go  1 "uint16"                .scheme.type
    hilight .hilight.go  1 "uint32"                .scheme.type
    hilight .hilight.go  1 "uint64"                .scheme.type
    
    hilight .hilight.go  1 "append"                .scheme.function
    hilight .hilight.go  1 "cap"                   .scheme.function
    hilight .hilight.go  1 "close"                 .scheme.function
    hilight .hilight.go  1 "complex"               .scheme.function
    hilight .hilight.go  1 "copy"                  .scheme.function
    hilight .hilight.go  1 "imag"                  .scheme.function
    hilight .hilight.go  1 "len"                   .scheme.function
    hilight .hilight.go  1 "make"                  .scheme.function
    hilight .hilight.go  1 "new"                   .scheme.function
    hilight .hilight.go  1 "panic"                 .scheme.function
    hilight .hilight.go  1 "print"                 .scheme.function
    hilight .hilight.go  1 "println"               .scheme.function
    hilight .hilight.go  1 "real"                  .scheme.function
    hilight .hilight.go  1 "recover"               .scheme.function
    
    !if &band .hilight.flags 0x08
        ; hilight consts, e.g. numbers
        hilight .hilight.go 1 "\\d+"               .scheme.constant
        hilight .hilight.go 1 "-\\d+"              .scheme.constant
        hilight .hilight.go 1 "\\d+\\.\\d+"        .scheme.constant
        hilight .hilight.go 1 "-\\d+\\.\\d+"       .scheme.constant
        hilight .hilight.go 1 "\\d+[Ee]\\d+"       .scheme.constant
        hilight .hilight.go 1 "0x[0-9a-f]+"        .scheme.constant
        hilight .hilight.go 1 "0o[0-7]+"           .scheme.constant
        
        hilight .hilight.go 1 "[A-Z_][A-Z0-9_]*"   .scheme.constant
    !endif
!endif

!if &sin "d" .fhook-go.setup
    0 indent .hilight.go 0 100
    
    indent .hilight.go n "{" t
    indent .hilight.go o "}" -t
    indent .hilight.go n "(" t
    indent .hilight.go o ")" -t
    indent .hilight.go n "\\[" t
    indent .hilight.go o "\\]" -t
    indent .hilight.go s "case[^:]+:" -t
    indent .hilight.go s "default[ \t]*:" -t
    
    indent .hilight.go n "/\\*" 1
    indent .hilight.go n "\\*/" -1
    
    indent .hilight.go c "\\+$" t
    indent .hilight.go c "-$" t
    indent .hilight.go c "\\*$" t
    indent .hilight.go c "/$" t
!endif

define-macro gofmt
    filter-buffer "gofmt"
!emacro

define-macro gomake
    compile "gomake"
!emacro

buffer-init-fhook "go"
